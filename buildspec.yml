version: 0.2

env:
  variables:
    TEST_ENV_VARIABLE: myArtifactName
    
phases:
  install:
    runtime-versions:
      nodejs: 10
  pre_build:
    commands:
      - cd /var/dbConfig
      - username=$(aws secretsmanager get-secret-value --secret-id dbConnection --query SecretString --region eu-west-2 --output text | echo $(jq -r .username))
      - password=$(aws secretsmanager get-secret-value --secret-id dbConnection --query SecretString --region eu-west-2 --output text | echo $(jq -r .password))
      - database=$(aws secretsmanager get-secret-value --secret-id dbConnection --query SecretString --region eu-west-2 --output text | echo $(jq -r .dbname))
      - host=$(aws secretsmanager get-secret-value --secret-id dbConnection --query SecretString --region eu-west-2 --output text | echo $(jq -r .host))
      - port=$(aws secretsmanager get-secret-value --secret-id dbConnection --query SecretString --region eu-west-2 --output text | echo $(jq -r .port))
      - dialect=$(aws secretsmanager get-secret-value --secret-id dbConnection --query SecretString --region eu-west-2 --output text | echo $(jq -r .engine))

      - echo $(jq '(.production | .username) = "'$username'"' mysql.json) > mysql.json
      - echo $(jq '(.production | .password) = "'$password'"' mysql.json) > mysql.json
      - echo $(jq '(.production | .database) = "'$database'"' mysql.json) > mysql.json
      - echo $(jq '(.production | .host) = "'$host'"' mysql.json) > mysql.json
      - echo $(jq '(.production | .port) = "'$port'"' mysql.json) > mysql.json
      - echo $(jq '(.production | .dialect) = "'$dialect'"' mysql.json) > mysql.json
  build:
    commands:
      - npm install
      - npm run build
      - echo Build completed on `date`

artifacts:
  files:
    - '**/*'